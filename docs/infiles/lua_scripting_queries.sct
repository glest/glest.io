title:LUA scripting | Queries
layout:_lua_scripting
---
<h2><span class="mw-headline" id="Queries">Queries</span></h2>
<h3><span class="mw-headline" id="unitPosition.28unitID.29">unitPosition(unitID)</span></h3>
<p>Returns the current location of a given unit.
</p><p>Parameters:<br />
<b>unitID - </b>the unitID of the unit whose position you wish to know.
</p><p>Example:
</p>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr"><div class="lua source-lua"><pre class="de1"><span class="kw1">if</span> <span class="br0">&#40;</span>unitPosition<span class="br0">&#40;</span>myUnit<span class="br0">&#41;</span><span class="br0">&#91;</span><span class="nu0">1</span><span class="br0">&#93;</span> <span class="sy0">&gt;</span> <span class="nu0">47</span> <span class="kw2">and</span> <span class="nu0">75</span> <span class="sy0">&gt;</span> unitPosition<span class="br0">&#40;</span>myUnit<span class="br0">&#41;</span><span class="br0">&#91;</span><span class="nu0">1</span><span class="br0">&#93;</span> <span class="kw2">and</span>  unitPostion<span class="br0">&#40;</span>myUnit<span class="br0">&#41;</span><span class="br0">&#91;</span><span class="nu0">2</span><span class="br0">&#93;</span> <span class="sy0">&gt;</span> <span class="nu0">95</span> <span class="br0">&#41;</span> <span class="kw1">then</span>
	<span class="co1">-- The unit's x co-ord is between 47 and 75, and its y cord is larger than 95.</span>
<span class="kw1">end</span></pre></div></div>
<h3><span class="mw-headline" id="unitFaction.28unitID.29">unitFaction(unitID)</span></h3>
<p>Returns the faction index of the unit with unitID.
</p><p>Parameters:<br />
<b>unitID</b> - The ID of the unit whose faction you wish you check.
</p>
<h3><span class="mw-headline" id="resourceAmount.28resource.2C_faction.29">resourceAmount(resource, faction)</span></h3>
<p>Returns the amount of a given resource is possessed by a faction.
</p><p>Parameters:<br />
<b>resource</b> - The name of the resource you wish you check.<br />
<b>faction</b> - The index of the faction to check.
</p>
<h3><span class="mw-headline" id="unitName.28unitId.29">unitName(unitId)</span></h3>
<p>Returns the name of the unit whose unit ID was passed into the function.
</p><p>Parameters:<br />
<b>unitID</b> - the ID of the unit whose name you wish to know.
</p>
<h3><span class="mw-headline" id="getFactionName.28unitId.29">getFactionName(factionId)</span></h3>
<p>Returns the faction name of the faction whose ID was passed into the function.
</p><p>Parameters:<br />
<b>factionID</b> - the ID of the loaded faction.
</p>
<h3><span class="mw-headline" id="lastCreatedUnitName.28.29">lastCreatedUnitName()</span></h3>
<p>Returns the unit name of the last created unit.
</p>
<h3><span class="mw-headline" id="lastCreatedUnit.28.29">lastCreatedUnit()</span></h3>
<p>Returns the unit ID of the last created unit.
</p>
<h3><span class="mw-headline" id="lastDeadUnitName.28.29">lastDeadUnitName()</span></h3>
<p>Returns the name of the last unit to die.
</p>
<h3><span class="mw-headline" id="lastDeadUnit.28.29">lastDeadUnit()</span></h3>
<p>Returns the ID of the last unit to die.
</p>
<h3><span class="mw-headline" id="lastDeadUnitCauseOfDeath.28.29">lastDeadUnitCauseOfDeath()</span></h3>
<p>Returns the following depending on how the last unit died:
</p>
<dl><dd>None = 0</dd>
<dd>Attacked = 1</dd>
<dd>Attack boost = 2</dd>
<dd>Starved resource = 3</dd>
<dd>Negative regeneration = 4</dd></dl>
<h3><span class="mw-headline" id="lastDeadUnitKillerName.28.29">lastDeadUnitKillerName()</span></h3>
<p>Returns the name of the killer of the last dead unit. Returns empty if the cause of death was not from an attacker (attacked).
</p>
<h3><span class="mw-headline" id="lastDeadUnitKiller.28.29">lastDeadUnitKiller()</span></h3>
<p>Returns the ID of the killer of the last dead unit. Returns -1 if the cause of death was not from an attacker (attacked).
</p>
<h3><span class="mw-headline" id="lastAttackedUnit.28.29">lastAttackedUnit()</span></h3>
<p>Returns the ID of the last unit which was attacked.
</p>
<h3><span class="mw-headline" id="lastAttackedUnitName.28.29">lastAttackedUnitName()</span></h3>
<p>Returns the name of the last unit which was attacked.
</p>
<h3><span class="mw-headline" id="lastAttackingUnit.28.29">lastAttackingUnit()</span></h3>
<p>Returns the ID of the last unit to attack.
</p>
<h3><span class="mw-headline" id="lastAttackingUnitName.28.29">lastAttackingUnitName()</span></h3>
<p>Returns the name of the last unit to attack.
</p>
<h3><span class="mw-headline" id="getSystemMacroValue.28key.29">getSystemMacroValue(key)</span></h3>
<p>Returns the value of the SystemMacro in C++ (e.g. $SCENARIO_PATH, $APPLICATIONPATH, $GAMEVERSION). At the moment it is primary used to get the path to the loaded scenario.
</p><p>Parameters:<br />
<b>key - </b> The name of the SystemMacro you want to get. Usually starts with "$". (e.g. $SCENARIO_PATH, $APPLICATIONPATH, $GAMEVERSION)
</p><p>Example (will load the file filename.lua in the folder of your scenario):
</p>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr"><div class="lua source-lua"><pre class="de1"><span class="kw3">dofile</span><span class="br0">&#40;</span>getSystemMacroValue<span class="br0">&#40;</span><span class="st0">&quot;$SCENARIO_PATH&quot;</span><span class="br0">&#41;</span> <span class="sy0">..</span> <span class="st0">&quot;filename.lua&quot;</span><span class="br0">&#41;</span></pre></div></div>
<h3><span class="mw-headline" id="scenarioDir.28.29">scenarioDir()</span></h3>
<p>Does the same as <b>getSystemMacroValue("$SCENARIO_PATH")</b>. Exist for GAE compatibility.
</p><p><br />
</p>
<h3><span class="mw-headline" id="getPlayerName.28faction.29">getPlayerName(faction)</span></h3>
<p>Returns the name of the player of a given faction.
</p>
<h3><span class="mw-headline" id="playerName.28faction.29">playerName(faction)</span></h3>
<p>Does the same as <b>getPlayerName(faction)</b>. Exist for GAE compatibility.
</p><p>Parameters:<br />
<b>faction</b> - The index of the faction you wish to check.
</p>
<h3><span class="mw-headline" id="unitCount.28faction.29">unitCount(faction)</span></h3>
<p>Returns the number of units a given faction has.
</p><p>Parameters:<br />
<b>faction</b> - The index of the faction you wish to check.
</p>
<h3><span class="mw-headline" id="unitCountOfType.28faction.2C_name.29">unitCountOfType(faction, name)</span></h3>
<p>Returns the number of units of a specific name a given faction has.
</p><p>Parameters:<br />
<b>faction</b> - The index of the faction you wish to check.<br />
<b>name</b> - The name of the specific unit you wish to check.
</p>
<h3><span class="mw-headline" id="gameWon.28.29">gameWon()</span></h3>
<p>Returns true if the human player won the game, and false if they did not.
</p>
<h3><span class="mw-headline" id="isGameOver.28.29">isGameOver()</span></h3>
<p>Returns true if the game is over (either by the default game over criteria being met or by calling <tt>endGame()</tt>). Returns false otherwise.
</p>
<h3><span class="mw-headline" id="startLocation.28faction.29">startLocation(faction)</span></h3>
<p>Returns the start location for a given faction as a set of coordinates.
</p><p>Parameters:<br />
<b>faction </b>- the index of the faction.
</p><p>Example:
</p>
<div dir="ltr" class="mw-geshi mw-code mw-content-ltr"><div class="lua source-lua"><pre class="de1">createUnit <span class="br0">&#40;</span> <span class="st0">&quot;someunit&quot;</span><span class="sy0">,</span> <span class="nu0">0</span><span class="sy0">,</span> <span class="br0">&#123;</span>startLocation<span class="br0">&#40;</span><span class="nu0">0</span><span class="br0">&#41;</span><span class="br0">&#91;</span><span class="nu0">1</span><span class="br0">&#93;</span> <span class="sy0">+</span> <span class="nu0">5</span><span class="sy0">,</span> startLocation<span class="br0">&#40;</span><span class="nu0">0</span><span class="br0">&#41;</span><span class="br0">&#91;</span><span class="nu0">2</span><span class="br0">&#93;</span><span class="br0">&#125;</span> <span class="br0">&#41;</span></pre></div></div>
<p>This would create a unit 5 cells east of startLocation 0.
</p>
<h3><span class="mw-headline" id="setRandomGenInit.28seed.29">setRandomGenInit(seed)</span></h3>
<p>Generates a random number based on the supplied seed.
</p>
<h3><span class="mw-headline" id="getRandomGen.28minVal.2C_maxVal.29">getRandomGen(minVal, maxVal)</span></h3>
<p>Used with <tt>setRandomGenInit</tt> to get a random number inbetween <tt>minVal</tt> and <tt>maxVal</tt>.
</p>
<h3><span class="mw-headline" id="getWorldFrameCount.28.29">getWorldFrameCount()</span></h3>
<p>Retrieves the world frame count, which can be used in seeding random numbers.
</p>
<h3><span class="mw-headline" id="getUnitsForFaction.28factionIndex.2C_commandTypeName.2C_field.29">getUnitsForFaction(factionIndex, commandTypeName, field)</span></h3>
<p>Returns an array (table) of units in the specified faction which lists all units which have the specified command and can use it on the specified field (such as being able to attack air units).<br />
<tt>0</tt> for land and <tt>1</tt> for air field.
</p>
<h3><span class="mw-headline" id="getUnitCurrentField.28unitId.29">getUnitCurrentField(unitId)</span></h3>
<p>For the specified unit, returns <tt>0</tt> if they are land and <tt>1</tt> if they are in the air field.
</p>
